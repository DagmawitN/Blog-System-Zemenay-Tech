// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  name     String
  image    String
  email    String    @unique
  password String
  role     String    @default("user") // "admin" or "user"
  posts    Post[]
  comments Comment[]
  likes    Like[]
}

model Category {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}

model Post {
  id         String     @id @default(cuid())
  title      String
  content    String
  imageUrl   String?
  status     PostStatus @default(PUBLISHED)
  views      Int        @default(0)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  authorId   String
  author     User       @relation(fields: [authorId], references: [id])
  categoryId String?
  category   Category?  @relation(fields: [categoryId], references: [id])
  comments   Comment[]
  likes      Like[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
}

model Like {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  postId String
  post   Post   @relation(fields: [postId], references: [id])
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
